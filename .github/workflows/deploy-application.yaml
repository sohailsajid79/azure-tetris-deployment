name: Deploy Tetris Application

on:
  push:
    branches:
      - dev

  # workflow_dispatch:
  #   inputs:
  #     branch:
  #       description: "Branch to deploy from"
  #       required: true
  #       default: "dev"

jobs:
  validate-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Docker Installation
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: azureadmin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            if ! [ -x "$(command -v docker)" ]; then
              echo "Docker is not installed. Installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker azureadmin
              echo "Docker installation complete."
            else
              echo "Docker is already installed."
            fi

  scan-docker-image:
    runs-on: ubuntu-latest
    needs: validate-docker
    steps:
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: sajid79/tetris-js-app:amd64
          format: table
          severity: HIGH,CRITICAL

  deploy-docker:
    runs-on: ubuntu-latest
    needs: scan-docker-image
    steps:
      - name: Deploy Docker Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: azureadmin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            if ! docker ps | grep -q "sajid79/tetris-js-app:amd64"; then
              echo "Pulling and running the Docker container..."
              docker pull sajid79/tetris-js-app:amd64
              docker run -d -p 8080:80 sajid79/tetris-js-app:amd64
              sleep 10
            else
              echo "Docker container is already running."
            fi
            docker ps

  configure-nginx:
    runs-on: ubuntu-latest
    needs: deploy-docker
    steps:
      - name: Configure NGINX
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: azureadmin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo bash -c 'cat > /etc/nginx/sites-available/tetris <<EOF
            server {
                listen 80;
                server_name tetris.sohailsajid.dev;

                location / {
                    proxy_pass http://127.0.0.1:8080;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                }
            }
            EOF'
            sudo ln -sf /etc/nginx/sites-available/tetris /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
            echo "NGINX config complete."

  configure-ssl:
    runs-on: ubuntu-latest
    needs: configure-nginx
    steps:
      - name: Install and Configure SSL with Certbot
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: azureadmin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            if [ -d "/etc/letsencrypt/live/tetris.sohailsajid.dev" ]; then
              echo "Deleting existing SSL certificate..."
              sudo certbot delete --cert-name tetris.sohailsajid.dev
            fi

            sudo apt install -y certbot python3-certbot-nginx
            sudo certbot --nginx -d tetris.sohailsajid.dev --non-interactive --agree-tos --email sohailsajid79@gmail.com
            sudo systemctl restart nginx
            echo "SSL certificate installation complete."

  verify-deployment:
    runs-on: ubuntu-latest
    needs: configure-ssl
    steps:
      - name: Verify Application Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: azureadmin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Verifying application on https://tetris.sohailsajid.dev"
            curl -I https://tetris.sohailsajid.dev || {
              echo "Deployment verification failed!"
              exit 1
            }
            echo "Application successfully deployed."

  create-pr:
    runs-on: ubuntu-latest
    needs: verify-deployment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Rebase dev onto main
        run: |
          git fetch origin
          git checkout dev
          git rebase origin/main
          git push origin dev --force

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: dev
          base: main
          title: "Deploy Tetris Application"
          body: |
            This PR merges deployment changes for the dev branch into the main branch.
